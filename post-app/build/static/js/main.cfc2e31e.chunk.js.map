{"version":3,"sources":["components/app-header/index.js","components/app-header/app-header.js","components/search-panel/index.js","components/search-panel/search-panel.js","components/post-status-filter/index.js","components/post-status-filter/post-status-filter.js","components/post-list-item/index.js","components/post-list-item/post-list-item.js","components/post-list/index.js","components/post-list/post-list.js","components/post-add-form/index.js","components/post-add-form/post-add-form.js","components/app/index.js","components/app/app.js","index.js"],"names":["AppHeader","liked","allPosts","className","SearchPanel","props","state","term","onUpdateSearch","bind","e","target","value","this","setState","type","placeholder","onChange","Component","PostStatusFilter","buttons","name","label","map","filter","onFilterSelect","clazz","key","onClick","PostListItem","onDelete","onToggleImportant","onToggleLiked","classNames","important","like","PostList","posts","elements","item","id","itemProps","PostAddForm","text","onValueChange","onSubmit","preventDefault","onAdd","App","data","deleteItem","addItem","maxId","index","findIndex","elem","slice","body","newItem","old","items","length","indexOf","visiblePosts","filterPost","searchPost","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cfc2e31e.chunk.js","sourcesContent":["import AppHeader from './app-header'\r\nexport default AppHeader;","import React from 'react';\r\nimport './app-header.css';\r\n\r\n\r\nconst AppHeader = ({liked, allPosts}) => {\r\n  return (\r\n    <div className=\"app-header d-flex\">\r\n      <h1>Nataliia Kirinovich</h1>\r\n      <h2>{allPosts} записей, из них понравилось {liked}</h2>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AppHeader;","import SearchPanel from './search-panel'\r\nexport default SearchPanel;","import React, {Component} from 'react';\r\nimport './search-panel.css';\r\n\r\nexport default class SearchPanel extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      term: ''\r\n    }\r\n    this.onUpdateSearch = this.onUpdateSearch.bind(this);\r\n  }\r\n  \r\n  onUpdateSearch(e) {\r\n    const term = e.target.value;\r\n    this.setState({term});\r\n    this.props.onUpdateSearch(term);\r\n  }\r\n\r\n  render (){\r\n    return(\r\n      <input \r\n        className=\"form-control search-input\"\r\n        type=\"text\"\r\n        placeholder=\"Поиск по записям\"\r\n        onChange={this.onUpdateSearch}\r\n      />\r\n    )\r\n  }\r\n}\r\n","import PostStatusFilter from './post-status-filter';\r\nexport default PostStatusFilter;","\r\nimport React, {Component} from 'react';\r\n\r\nimport './post-status-filter.css';\r\n\r\n\r\nexport default class PostStatusFilter extends Component {\r\n     constructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.buttons = [\r\n\t\t\t{name: 'all', label: 'Все'},\r\n\t\t\t{name: 'like', label: 'Понравилось'}\r\n        ];\r\n     }\r\n    render() {\r\n\r\n\t\tconst buttons = this.buttons.map(({name, label}) => {\r\n            const {filter, onFilterSelect} = this.props;\r\n\t\t\tconst active = filter === name;\r\n\t\t\tconst clazz = active ? 'btn-info' : 'btn-outline-secondary'\r\n\t\t\treturn (\r\n\t\t\t\t<button type='button'\r\n\t\t\t\t \tclassName={`btn ${clazz}`}\r\n\t\t\t\t\tkey={name}\r\n\t\t\t\t\tonClick={() => onFilterSelect(name)}>\r\n\t\t\t\t\t{label}</button>\r\n\t\t\t)\r\n\t\t});\r\n\r\n        return (\r\n            <div className=\"btn-group\">\r\n                {buttons}\r\n            </div>\r\n        )\r\n    }\r\n}","import PostListItem from './post-list-item'\r\nexport default PostListItem;","import React, {Component} from 'react';\r\nimport './post-list-item.css';\r\n\r\nexport default class PostListItem extends Component {\r\n\r\n  render(){\r\n    const {label, onDelete, onToggleImportant, onToggleLiked, important, like} = this.props;    let classNames ='app-list-item d-flex justify-content-between';\r\n    if(important){\r\n      classNames += ' important';\r\n    }\r\n    if(like){\r\n      classNames += ' like';\r\n    }\r\n    return(\r\n      <div className={classNames}>\r\n        <span\r\n        className=\"app-list-item-label\"\r\n        onClick={onToggleLiked}>\r\n          {label}\r\n        </span>\r\n        <div className=\"d-flex justify-content-center align-items-center\">\r\n          <button \r\n          type=\"button\" \r\n          className=\"btn-star btn-sm\"\r\n          onClick = {onToggleImportant}>\r\n            <i className=\"fa fa-star\">\r\n            </i>\r\n          </button>\r\n          <button \r\n          type=\"button\" \r\n          className=\"btn-trash btn-sm\"\r\n          onClick={onDelete}>\r\n            <i className=\"fa fa-trash-o\">\r\n            </i>\r\n          </button>\r\n          <i className=\"fa fa-heart\"></i>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import PostList from './post-list'\r\nexport default PostList;","import React from 'react';\r\nimport PostListItem from '../post-list-item';\r\nimport './post-list.css';\r\n\r\nconst PostList = ({posts, onDelete, onToggleImportant, onToggleLiked}) => {\r\n  const elements = posts.map((item) => {\r\n    const {id, ...itemProps} = item;\r\n    return(\r\n      <li key={id} className=\"list-group-item\">\r\n        <PostListItem \r\n          {...itemProps}\r\n          onDelete={() => onDelete(id)}\r\n          onToggleImportant = {() => onToggleImportant(id)}\r\n          onToggleLiked = {() => onToggleLiked(id)}\r\n        />\r\n      </li>\r\n    )\r\n  })\r\n  return(\r\n    <ul className=\"app-list list-group\"> \r\n      {elements}\r\n    </ul>\r\n  )\r\n}\r\n\r\nexport default PostList;","import PostAddForm from './post-add-form'\r\nexport default PostAddForm;","import React, {Component} from 'react';\r\nimport './post-add-form.css';\r\n\r\nexport default class PostAddForm extends Component{\r\n  constructor (props) {\r\n    super(props);\r\n    this.state = {\r\n      text: ''\r\n    }\r\n    this.onValueChange = this.onValueChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  onValueChange(e) {\r\n    this.setState({\r\n      text: e.target.value\r\n    })\r\n  }\r\n\r\n  onSubmit(e){\r\n    e.preventDefault();\r\n    this.props.onAdd(this.state.text);\r\n    this.setState({\r\n      text: ''\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return(\r\n      <form \r\n        className=\"bottom-panel d-flex\"\r\n        onSubmit={this.onSubmit}>\r\n        <input \r\n          type=\"text\"\r\n          placeholder=\"О чём вы думаете сейчас?\"\r\n          className=\"form-control new-post-label\"\r\n          onChange = {this.onValueChange}\r\n          value={this.state.text}\r\n        />\r\n        <button\r\n          type=\"submit\"\r\n          className=\"btn btn-outline-secondary\">\r\n          добавить</button>\r\n      </form>\r\n    )\r\n  }\r\n}\r\n","import App from './app'\r\nexport default App;","import React, {Component} from 'react';\r\n\r\nimport AppHeader from '../app-header';\r\nimport SearchPanel from '../search-panel';\r\nimport PostStatusFilter from '../post-status-filter';\r\nimport PostList from '../post-list';\r\nimport PostAddForm from '../post-add-form';\r\n\r\nimport './app.css';\r\n\r\nexport default class App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data : [\r\n          {label: 'Going to learn React', important: true, like: false, id: 1},\r\n          {label: 'That is so good', important: false, like: false, id: 2},\r\n          {label: 'I need a break...', important: false, like: false, id: 3}\r\n      ],\r\n      term: '',\r\n      filter: 'all'\r\n  };\r\n    this.deleteItem = this.deleteItem.bind(this);\r\n    this.addItem = this.addItem.bind(this);\r\n    this.onToggleImportant = this.onToggleImportant.bind(this);\r\n    this.onToggleLiked = this.onToggleLiked.bind(this);\r\n    this.onUpdateSearch = this.onUpdateSearch.bind(this);\r\n    this.onFilterSelect = this.onFilterSelect.bind(this);\r\n  \r\n    this.maxId = 4;\r\n  }\r\n\r\n  deleteItem (id) {\r\n    this.setState(({data}) => {\r\n      const index = data.findIndex(elem => elem.id === id);\r\n      const newArr = [...data.slice(0, index), ...data.slice(index + 1)];\r\n \r\n      return{\r\n        data: newArr\r\n      }\r\n    })\r\n  }\r\n \r\n  addItem (body) {\r\n    const newItem = {\r\n      label: body,\r\n      important: false,\r\n      id: this.maxId++\r\n    }\r\n  \r\n    this.setState(({data}) => {\r\n        const newArr = [...data, newItem];\r\n        return {\r\n            data: newArr\r\n        }\r\n    });\r\n  }\r\n \r\n  onToggleImportant(id) {\r\n    this.setState(({data}) => {\r\n      const index = data.findIndex(elem => elem.id === id);\r\n\r\n      const old = data[index];\r\n      const newItem = {...old, important: !old.important};\r\n\r\n      const newArr = [...data.slice(0, index), newItem, ...data.slice(index + 1)];\r\n      return {\r\n        data: newArr\r\n      }\r\n    }); \r\n}\r\n\r\n  onToggleLiked(id) {\r\n    this.setState(({data}) => {\r\n      const index = data.findIndex(elem => elem.id === id);\r\n\r\n      const old = data[index];\r\n      const newItem = {...old, like: !old.like};\r\n\r\n      const newArr = [...data.slice(0, index), newItem, ...data.slice(index + 1)];\r\n      return {\r\n        data: newArr\r\n      }\r\n    }); \r\n  }\r\n\r\n  searchPost(items, term) {\r\n    if (term.length === 0) {\r\n      return items\r\n    }\r\n\r\n    return items.filter((item) => {\r\n      return item.label.indexOf(term) > -1\r\n    });\r\n  }\r\n\r\n  filterPost(items, filter) {\r\n    if (filter === 'like') {\r\n      return items.filter(item => item.like)\r\n    } else {\r\n      return items\r\n    }\r\n  }\r\n\r\n  onUpdateSearch(term) {\r\n    this.setState({term})\r\n  }\r\n\r\n  onFilterSelect(filter){\r\n    this.setState({filter})\r\n  }\r\n\r\n  render(){\r\n    const {data, term, filter} = this.state;\r\n\r\n    const liked = data.filter((item) => item.like).length;\r\n    const allPosts = data.length;\r\n    const visiblePosts = this.filterPost(this.searchPost(data, term), filter);\r\n    return (\r\n      <div className=\"app\">\r\n        <AppHeader\r\n          liked = {liked} allPosts = {allPosts}\r\n        />\r\n        <div className=\"search-panel d-flex\">\r\n          <SearchPanel\r\n            onUpdateSearch={this.onUpdateSearch} \r\n          />\r\n          <PostStatusFilter\r\n            filter={filter}\r\n            onFilterSelect={this.onFilterSelect}\r\n          />\r\n        </div>\r\n        <PostList \r\n          posts = {visiblePosts}\r\n          onDelete={this.deleteItem}\r\n          onToggleImportant={this.onToggleImportant}\r\n          onToggleLiked={this.onToggleLiked}\r\n        />\r\n        <PostAddForm\r\n          onAdd = {this.addItem}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n }\r\n\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/app/';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}